Description: Elastic Beanstalk for Agora
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AppDeployBucket:
    Description: Bucket where beanstalk deploys apps from
    Type: String
  AppEnv:
    Type: String
    Description: The application environment
  AppHealthcheckUrl:
    Type: String
    Description: The AWS EB health check path
  AutoScalingMaxSize:
    Type: String
    Default: '2'
  AutoScalingMinSize:
    Type: String
    Default: '1'
  DisableOpencollective:
    Type: String
    Default: true
    Description: 'Disable donation request by Open Collective'
    AllowedValues:
      - true
      - false
    ConstraintDescription: 'Valid values are true or false'
  EbHealthReportingSystem:
    Type: String
    Default: basic
    AllowedValues:
      - basic
      - enhanced
    ConstraintDescription: must be either basic or enhanced
  SnsBounceNotificationEndpoint:
    Type: String
    Description: Email address for SNS bounce notifications
  SnsNotificationEndpoint:
    Type: String
    Description: Email address for AWS SNS notifications
  EbSolutionStackName:
    Description: The AWS Solution Stack
    Type: String
  EC2InstanceType:
    Type: String
    Description: Instance type to use for Elastic Beanstalk Instances
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
  EC2KeyName:
    Description: An existing EC2 keypair to allow secure access to instances
    Type: String
  MongodbHost:
    Type: String
    Description: Mongo database host address
  MongodbPort:
    Type: String
    Description: Mongo database port
    Default: '27017'
  EbRollingUpdateType:
    Type: String
    Description: Env's auto scaling group rolling update type
    Default: 'Health'
  EbDeploymentPolicy:
    Type: String
    Description: Application version deployment type
    Default: 'Rolling'
  MongodbAccessSecurityGroup:
    Type: String
    Description: Security group with access to MongoDB servers
  Department:
    Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'SysBio'
  Project:
    Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'amp-ad'
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
    Default: 'anna.greenwood@sagebase.org'
Resources:
  S3AppDeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref AppDeployBucket
      Tags:
        - Key: "Department"
          Value: !Ref Department
        - Key: "Project"
          Value: !Ref Project
        - Key: "OwnerEmail"
          Value: !Ref OwnerEmail
  LoadBalancerAccessLogsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      Tags:
        - Key: "Department"
          Value: !Ref Department
        - Key: "Project"
          Value: !Ref Project
        - Key: "OwnerEmail"
          Value: !Ref OwnerEmail
  LoadBalancerAccessLogsBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref LoadBalancerAccessLogsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ModAccess
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - !GetAtt LoadBalancerAccessLogsBucket.Arn
                  - '/*'
            Principal:
              AWS:
                - 127311923021
  S3ManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ListAccess
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
            Effect: Allow
            Resource: !GetAtt S3AppDeployBucket.Arn
          - Sid: ModAccess
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:DeleteObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - !GetAtt S3AppDeployBucket.Arn
                - '/*'
  R53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !ImportValue us-east-1-agora-common-HostedZoneId
      Name: !Join
        - ''
        - - !Ref AWS::StackName
          - .
          - !ImportValue us-east-1-agora-common-DNSDomainName
          - .
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt
          - BeanstalkEnvironment
          - EndpointURL
  # KMS Keys
  KmsDecryptManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadAccess
            Action:
              - 'kms:ListKeys'
              - 'kms:ListAliases'
              - 'kms:DescribeKey'
              - 'kms:ListKeyPolicies'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'iam:ListUsers'
              - 'iam:ListRoles'
            Effect: Allow
            Resource: !ImportValue us-east-1-agora-common-KmsKeyArn
          - Sid: DecryptAccess
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Effect: Allow
            Resource: !ImportValue us-east-1-agora-common-KmsKeyArn
  SsmManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: GetParamAccess
            Action:
              - 'ssm:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:ssm:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':'
                - 'parameter/'
                - !Ref AWS::StackName
                - '/*'
  BeanstalkConfigTemplate:
    Type: 'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName: !ImportValue us-east-1-agora-common-BeanstalkAppName
      SolutionStackName: !Ref EbSolutionStackName
      OptionSettings:
        # EB environment options
        - Namespace: 'aws:ec2:vpc'
          OptionName: VPCId
          Value: !ImportValue us-east-1-computevpc-VPCId
        - Namespace: 'aws:ec2:vpc'
          OptionName: ELBScheme
          Value: 'public'
        - Namespace: 'aws:ec2:vpc'
          OptionName: AssociatePublicIpAddress
          Value: 'false'
        - Namespace: 'aws:ec2:vpc'
          OptionName: Subnets
          Value: !Join
            - ','
            - - !ImportValue us-east-1-computevpc-PrivateSubnet
              - !ImportValue us-east-1-computevpc-PrivateSubnet1
              - !ImportValue us-east-1-computevpc-PrivateSubnet2
        - Namespace: 'aws:ec2:vpc'
          OptionName: ELBSubnets
          Value: !Join
            - ','
            - - !ImportValue us-east-1-computevpc-PublicSubnet
              - !ImportValue us-east-1-computevpc-PublicSubnet1
              - !ImportValue us-east-1-computevpc-PublicSubnet2
        - Namespace: 'aws:autoscaling:asg'
          OptionName: MaxSize
          Value: !Ref AutoScalingMaxSize
        - Namespace: 'aws:autoscaling:asg'
          OptionName: MinSize
          Value: !Ref AutoScalingMinSize
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: InstanceType
          Value: !Ref EC2InstanceType
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: EC2KeyName
          Value: !Ref EC2KeyName
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: SecurityGroups
          Value: !Ref MongodbAccessSecurityGroup
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: RootVolumeSize
          Value: '32'
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateEnabled
          Value: 'true'
        - Namespace: 'aws:autoscaling:updatepolicy:rollingupdate'
          OptionName: RollingUpdateType
          Value: !Ref EbRollingUpdateType
        - Namespace: 'aws:elasticbeanstalk:application'
          OptionName: Application Healthcheck URL
          Value: !Ref AppHealthcheckUrl
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: StreamLogs
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: DeleteOnTerminate
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: RetentionInDays
          Value: '90'
        - Namespace: 'aws:elasticbeanstalk:command'
          OptionName: DeploymentPolicy
          Value: !Ref EbDeploymentPolicy
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !ImportValue us-east-1-agora-common-BeanstalkServiceRole
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: LoadBalancerType
          Value: 'application'
        - Namespace: 'aws:elbv2:loadbalancer'
          OptionName: AccessLogsS3Bucket
          Value: !Ref LoadBalancerAccessLogsBucket
        - Namespace: 'aws:elbv2:loadbalancer'
          OptionName: AccessLogsS3Enabled
          Value: 'true'
        # use manually generated SSL certificate '*.adknowledgeportal.org'
        - Namespace: 'aws:elbv2:listener:443'
          OptionName: SSLCertificateArns
          Value: 'arn:aws:acm:us-east-1:055273631518:certificate/af3dd144-7306-4c35-a514-2b36cbdefd08'
        - Namespace: 'aws:elbv2:listener:443'
          OptionName: Protocol
          Value: HTTPS
        - Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: Protocol
          Value: 'HTTP'
        - Namespace: 'aws:elasticbeanstalk:healthreporting:system'
          OptionName: SystemType
          Value: !Ref EbHealthReportingSystem
        - Namespace: 'aws:elasticbeanstalk:hostmanager'
          OptionName: LogPublicationControl
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:xray'
          OptionName: XRayEnabled
          Value: 'false'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: MONGODB_HOST
          Value: !Ref MongodbHost
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: MONGODB_PORT
          Value: !Ref MongodbPort
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: APP_ENV
          Value: !Ref AppEnv
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: DISABLE_OPENCOLLECTIVE
          Value: !Ref DisableOpencollective
  BeanstalkEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !ImportValue us-east-1-agora-common-BeanstalkAppName
      TemplateName: !Ref BeanstalkConfigTemplate
      EnvironmentName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
      Tier:
        Name: WebServer
        Type: Standard
  EC2ServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
        - 'arn:aws:iam::aws:policy/AmazonSNSFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'
        - !Ref SsmManagedPolicy
        - !Ref S3ManagedPolicy
        - !Ref KmsDecryptManagedPolicy
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2ServiceRole
  SNSBounceTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref SnsBounceNotificationEndpoint
          Protocol: "email"
  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref SnsNotificationEndpoint
          Protocol: "email"
Outputs:
  S3AppDeployBucket:
    Value: !Ref S3AppDeployBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AppDeployBucket'
  AppPublicEndpoint:
    Value: !Join
      - ''
      - - 'https://'
        - !Ref AWS::StackName
        - .
        - !ImportValue us-east-1-agora-common-DNSDomainName
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AppPublicEndpoint'
  BeanstalkEnvironmentName:
    Value: !Ref BeanstalkEnvironment
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BeanstalkEnvironmentName'
  BeanstalkEnvironmentUrl:
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - BeanstalkEnvironment
          - EndpointURL
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BeanstalkEnvironmentUrl'
  InstanceProfile:
    Value: !Ref InstanceProfile
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-InstanceProfile'
